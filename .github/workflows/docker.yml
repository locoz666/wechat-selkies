name: Build and Publish Docker Image

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - master
      - dev
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - master

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - variant: wechat
            default_app: wechat
          - variant: qq
            default_app: qq
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') || github.ref == format('refs/heads/{0}', 'master') }}
          type=sha,prefix={{branch}}-

    - name: Compose tags with variant suffix
      id: variant-tags
      run: |
        python <<'PY'
        # 将 metadata 输出的镜像标签追加变体后缀
        import os
        tags = """${{ steps.meta.outputs.tags }}""".strip().splitlines()
        suffix = "${{ matrix.variant }}"
        variant_tags = [f"{tag}-{suffix}" for tag in tags if tag.strip()]
        output_path = os.environ["GITHUB_OUTPUT"]
        with open(output_path, "a", encoding="utf-8") as fh:
          fh.write("tags<<EOF\n")
          fh.write("\n".join(variant_tags))
          fh.write("\nEOF\n")
        PY

    - name: Build and push Docker image
      id: build-image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.variant-tags.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          DEFAULT_APP=${{ matrix.default_app }}

    - name: Generate artifact attestation
      if: github.event_name != 'pull_request' && github.event_name != 'workflow_dispatch'
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        subject-digest: ${{ steps.build-image.outputs.digest }}
        push-to-registry: true

    - name: Output Docker image information
      if: github.event_name != 'pull_request'
      run: |
        echo "## 🐳 Docker Image Published" >> $GITHUB_STEP_SUMMARY
        echo "**Registry:** ${{ env.REGISTRY }}" >> $GITHUB_STEP_SUMMARY
        echo "**Repository:** ${{ env.IMAGE_NAME }}" >> $GITHUB_STEP_SUMMARY
        echo "**Variant:** ${{ matrix.variant }}" >> $GITHUB_STEP_SUMMARY
        echo "**DEFAULT_APP:** ${{ matrix.default_app }}" >> $GITHUB_STEP_SUMMARY
        echo "**Digest:** \`${{ steps.build-image.outputs.digest }}\`" >> $GITHUB_STEP_SUMMARY
        echo "**Tags:**" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        echo "${{ steps.variant-tags.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
